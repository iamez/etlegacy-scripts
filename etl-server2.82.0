#!/bin/bash

# Define version variables and users
etlegacy_version="2.82.0"  # Update this for the desired version
default_game_directory="$HOME/etlegacy-v${etlegacy_version}-x86_64"
default_installation_file_path="${default_game_directory}/legacy/"
home_directory="$HOME"
tmp_directory="$HOME/tmp"

# Create temporary directory if it doesn't exist
mkdir -p "$tmp_directory"

# Download ET Legacy server installation script
sudo curl -OJL https://www.etlegacy.com/download/file/577

sudo chown "$USER:$USER" "etlegacy-v${etlegacy_version}-x86_64.sh"
sudo chmod a+x "etlegacy-v${etlegacy_version}-x86_64.sh"

# Install the server using defaults and as the current user
yes | sudo -H -u "$USER" /bin/bash -c "cd $HOME && ./etlegacy-v${etlegacy_version}-x86_64.sh"

# Find the latest installed version dynamically
installed_version_directory=$(find "$home_directory" -maxdepth 1 -type d -name "etlegacy-v*" | sort -V | tail -n 1)

# Set ownership and permissions for extracted files
sudo chown -R "$USER:$USER" "$installed_version_directory"
sudo chmod -R 700 "$installed_version_directory"

# Download competitive configs from ET: Legacy Competitive GitHub repository
config_repo_url="https://github.com/ET-Legacy-Competitive/Legacy-Competition-League-Configs/archive/main.zip"
config_temp_zip="$tmp_directory/main.zip"
sudo wget "$config_repo_url" -O "$config_temp_zip"
sudo unzip "$config_temp_zip" -d "$tmp_directory"
sudo cp -r "$tmp_directory/Legacy-Competition-League-Configs-main/." "$default_game_directory/etmain/"
sudo chown -R "$USER:$USER" "$default_game_directory/etmain/"
sudo chmod -R 700 "$default_game_directory/etmain/"
sudo rm -rf "$tmp_directory/Legacy-Competition-League-Configs-main"

# Download server configs
sudo -u "$USER" curl -sSfL "https://raw.githubusercontent.com/iamez/freshinstall/main/aim.cfg" -o "$default_game_directory/etmain/aim.cfg"
sudo -u "$USER" curl -sSfL "https://raw.githubusercontent.com/iamez/freshinstall/main/aim.config" -o "$default_game_directory/etmain/configs/aim.config"
sudo -u "$USER" curl -sSfL "https://raw.githubusercontent.com/iamez/freshinstall/main/vektor.cfg" -o "$default_game_directory/etmain/vektor.cfg"
echo "Custom configs have been successfully downloaded and installed."

# Download etdaemon2.sh and move it to the game directory
curl -o "$default_game_directory/etdaemon2.sh" -L https://github.com/iamez/etlegacy-scripts/raw/main/etdaemon2.sh
chmod +x "$default_game_directory/etdaemon2.sh"
chown "$USER:$USER" "$default_game_directory/etdaemon2.sh"
sed -i -e "s#^GAME_DIR=\".*\"#GAME_DIR=\"$default_game_directory\"#" -e 's/\r//' "$default_game_directory/etdaemon2.sh"


# Download endstats.lua and c0rnp0rn.lua
sudo -u "$USER" curl -sSfL "https://raw.githubusercontent.com/iamez/etlegacy-scripts/main/endstats.lua" -o "${installed_version_directory}/legacy/endstats.lua"
sudo -u "$USER" curl -sSfL "https://raw.githubusercontent.com/iamez/etlegacy-scripts/main/c0rnp0rn.lua" -o "${installed_version_directory}/legacy/c0rnp0rn.lua"
sudo chown "$USER:$USER" "${installed_version_directory}/legacy/endstats.lua"
sudo chown "$USER:$USER" "${installed_version_directory}/legacy/c0rnp0rn.lua"
sudo chmod 700 "${installed_version_directory}/legacy/endstats.lua"
sudo chmod 700 "${installed_version_directory}/legacy/c0rnp0rn.lua"

# Update lua_modules configurations
sed -i 's/\(setl lua_modules.*\) "$/ \1 endstats.lua c0rnp0rn.lua"/' "${default_game_directory}/etmain/configs/"*config

# Update maxfps value
sed -i 's/command "sv_cvar com_maxfps IN 40 250"/command "sv_cvar com_maxfps IN 40 500"/' "${default_game_directory}/etmain/configs/"*config

# Define the primary and backup mirror URLs for downloading maps
primary_mirror_url="http://download.hirntot.org/etmain/"
backup_mirror_url="http://185.107.96.127/etmain/"

# List of maps to download
maps=(
    "badplace4_beta8.pk3"
    "braundorf_b4.pk3"
    "bremen_b3.pk3"
    "decay_sw.pk3"
    "erdenberg_t2.pk3"
    "et_beach.pk3"
    "et_brewdog_b6.pk3"
    "et_ice.pk3"
    "etl_adlernest_v4.pk3"
    "etl_frostbite_v17.pk3"
    "etl_ice_v12.pk3"
    "etl_sp_delivery_v5.pk3"
    "etl_supply_v14.pk3"
    "etl_warbell_v3.pk3"
    "et_ufo_final.pk3"
    "Frostbite.pk3"
    "karsiah_te2.pk3"
    "kothet2.pk3"
    "lnatrickjump.pk3"
    "maniacmansion.pk3"
    "missile_b3.pk3"
    "mp_sillyctf.pk3"
    "mp_sub_rc1.pk3"
    "multi_huntplace.pk3"
    "reactor_final.pk3"
    "sos_secret_weapon.pk3"
    "sp_delivery_te.pk3"
    "supply.pk3"
    "sw_battery.pk3"
    "sw_goldrush_te.pk3"
    "sw_oasis_b3.pk3"
    "te_escape2_fixed.pk3"
    "te_escape2.pk3"
    "te_valhalla.pk3"
)

# Download maps
ETMAIN_DIR="${default_game_directory}/etmain"
for map in "${maps[@]}"
do
    map_url="${primary_mirror_url}${map}"
    if [ -e "${ETMAIN_DIR}/${map}" ]; then
        echo "${map} already exists in ${ETMAIN_DIR} and will be skipped"
        ((num_skipped++))
    else
        if sudo wget -q "$map_url" -O "$ETMAIN_DIR/${map}"; then
            echo "Downloaded ${map} from ${primary_mirror_url}"
            sudo chown "$USER:$USER" "${ETMAIN_DIR}/${map}"
            sudo chmod 700 "${ETMAIN_DIR}/${map}"
            ((num_downloaded++))
        else
            echo "Failed to download ${map} from ${primary_mirror_url}, trying backup mirror..."
            map_url="${backup_mirror_url}${map}"
            if sudo wget -q "$map_url" -O "$ETMAIN_DIR/${map}"; then
                echo "Downloaded ${map} from ${backup_mirror_url}"
                sudo chown "$USER:$USER" "${ETMAIN_DIR}/${map}"
                sudo chmod 700 "${ETMAIN_DIR}/${map}"
                ((num_downloaded++))
            else
                echo "Failed to download ${map} from backup mirror ${backup_mirror_url}"
                ((num_failed++))
            fi
        fi
    fi
done

echo "Downloaded ${num_downloaded} files. Skipped ${num_skipped} files that already exist. Failed to download ${num_failed} files"



# Create the start.sh script
DOMA="$HOME"
cat << EOF > "$DOMA/start.sh"
#!/bin/bash
sleep 10
cd "$default_game_directory"
bash etdaemon2.sh &
EOF

# Set permissions for start.sh
sudo chown "$USER:$USER" "$DOMA/start.sh"
sudo chmod a+x "$DOMA/start.sh"

# Add crontab entries
(crontab -u "$USER" -l ; echo "0 6 * * * kill \$(pidof \"$default_game_directory/etlded.x86_64\")") | crontab -u "$USER" -
(crontab -u "$USER" -l ; echo "@reboot /bin/bash \"$DOMA/start.sh\" >/dev/null 2>&1") | crontab -u "$USER" -


sudo chmod a+x "$default_game_directory/etlded.x86_64"
sudo touch "/home/$USER/start_servers.log"
sudo chown "$USER:$USER" "/home/$USER/start_servers.log"

/bin/bash -c "cd ${installed_version_directory} && ./etdaemon2.sh" &

